-----숙제풀이

 

 

 

- 신규컨텐츠 개발

- 라이브컨텐츠 개발

 

온라인 컨텐츠 제작 프로그래머

 

	(모바일포함)

 

 

  00 01 02 03 04

  10 11 12 13 14

  20 21 22 23 24               행렬 - 여러개의 숫자를 행과열로표현

  30 31 32 33 34

  40 41 42 43 44

 

 

  00 

  10 11 

  20 21 22               

  30 31 32 33              i가 j보다 크면 별출력 그게 아니면 공백출력  if( i >= j)       else 사용

  40 41 42 43 44

 

 

  00 01 02 03 04

  10 11 12 13 

  20 21 22                 i+j =4   i + j <4

  30 31 

  40 

 

 

              04

           13 14

        22 23 24               

     31 32 33 34

  40 41 42 43 44

 

 

  00 01 02 03 04

     11 12 13 14

        22 23 24               

           33 34

              44

 

 

* 게임은 애니메이션.. * 실제로 움직이는게아님 - 존재하는걸 있는거처럼 표현하는..

 

 

 

--함수-- ( 데이터를 기능을 만드는 문법, 코드의 재사용을 위해 만드는 문법.)

 

메인함수 - 프로젝트당 단 하나

 

소괄호부분 함수의 선언부

 

중괄호부분 함수의 몸체 or 정의부

 

어떻게 만들고 어떤 종류가 있는가..

 

void - 어떠한 자료형도 아니다 없다                                main - 함수이름 (이름을 붙여주면 이걸통해서 메모리에 접근)                                                            

                                                                        한번 올려놓고 필요할때마다 가지고온다 ( 이름을통해)(어떠한 주소상태를 가지고있다 - 메인메모리에 해당하는 값)

 

(void) 파라미터 매개변수 - 입력받는곳 (안에있는걸 입력받겠다)

 

입력과 출력이 갇혀있다.. - 기능만 사용하겠다 --- 순수 기능만 가지고있는것들이 void타입

 

반환타입 - 어떠한 상태의 데이터를 돌려주겠다 즉 아웃풋이없다..

 

 

입력이 열려있는 유형

 

void render(int a)

{

cout << a

}

 

입력은 막혀있고 나가는건 있는 유형

 

int main(void)

{

return 0;           -  두가지기능 : 무조건 함수를 종료시킨다 (밑에 코드가 있어도 강제종료) , 강제종료를 하면서 인트타입의 데이터를 돌려줘야한다.

}

 

 

둘다 열려있는 유형     - 매개타입 반환타입 둘다 존재

 

int Add(inta,intb) 받겠다 반환타입이 있으면 리턴이 반드시 있어야함!

 

{

return a + b;

}

 

 

 

----------------

반환타입도 매개변수도 없는타입

 

반환타입 함수이름 매개변수

void Render(void); 

{                       - 요렇게해도됨

}

 

함수는 앞으로 선언부는 위쪽 몸체는 아래쪽으로 만들자 (1개월차)    -  분리하자..  ex) 코드를 짜면 기능이 구현된 파일과(암호화, 제공x) 어떤 기능이 있다라는 파일이 구분됨(사용자에게 제공)

 

선언부와 정의부를 분리하자!

 

 

void Render(void)

{

cout << "Hello" << endl;             이름은 알지만 이름에 해당하는걸 실행하라고는 안했다.. 실행하라고 하는 연산자가 () -- 함수호출연산자  Render() - 함수이름(함수 호출 연산자) - 함수를 호출하다

}

 

 

void Draw (int_iTemp);

 

 

 

함수안에서 함수 사용 가능하고 서로가 연계해서도 쓸수있는것이 함수의특성

 

함수 내에 코드는 한줄~몇만줄 가능 - 오로지 한번만 쓸거면 함수를 쓸필요가없음 -원할때 꺼내쓰는거니까

 

 

 

---- 메모리에 따른 동작

 

 

void Render(void)

{

int iTemp = 10;                      //지역변수 ( stack ) --- 함수가 호출된후에 메모리 소멸! 

 

cout << (++iTemp) << endl;

}

 

 

void Draw(int _iTemp)                 //매개변수(엄연히 이야기하면 지역변수와 같다) 생성될떄 나왔다가 호출후에 소멸 ( stack)..  stack에 잡히는애들은 호출후에 반드시소멸

{

cout << (++_iTemp) << endl;         

}

 

위쪽에 선언해버리면                      // 전역 변수 (Data 영역) -- 프로그램이 종료될때까지 있음..  -- 다른지역의 지역변수는 다른지역인곳에서는 이름을 알수없다 (지역특성)

                                             전역 변수는 한 파일 공간 안에서 어떤 함수에서건 그 이름을 사용 할 수 있다.

 

static int iNumber = 10;                 // 정적변수 (Data 영역) 혹은 스태틱변수 -- 

 

**함수내에 선언된 정적변수

**지역내에 선언된 지역변수

 

같은 공간내에있는 변수가 우선권을 가짐.. 즉 스태틱이 전역보단 먼저

 

----정적변수는 데이터영역에 할당은됨 하지만 전역변수처럼 모든곳에 쓸수는 없다.

 

외부에서 접근 가능한 정적변수 - 전역변수   이게 맞는표현  사실상 스태틱이 붙어있는거나 마찬가지.. (혼란을 일으키지 않으려고 안붙이는거)

내부에서 접근 가능한 정적변수 - 스태틱      (함수내부)

 

 

함수 위치 주의! ( 위쪽에 함수가 먼저 있느냐 없느냐 잘체크하기)

반환값 없으면 그냥 return; - 만나면 무조건 종료! 아래에 코드가 있건없건

return은 함수 안에존재가능 마치 반복문의 break;처럼 강제종료 시키고 싶을때 return 사용가능

 

여태 만들었던 과제들을 함수들로 만들고 출력해보기!!!!

 

ex) 별찍기같은건 이것저것 건드려보기

    void void 만들어놓고 호출해보기

   매개변수 받아도보고 반환타입도 만들어보고